plugins {
	id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
}

group = 'org.oieho'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	implementation 'javax.persistence:javax.persistence-api:2.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.20'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
 main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
 options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
 file(querydslDir).deleteDir()
}


tasks.named('test') {
	exclude '**/*'
	//useJUnitPlatform()
}
